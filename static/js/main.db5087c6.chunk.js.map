{"version":3,"sources":["api/users.ts","api/todos.ts","UserInfo/UserInfo.tsx","TodoInfo/TodoInfo.tsx","TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserInfo","className","TodoInfo","TodoList","preparedTodos","map","todoItem","userInfo","App","useState","titleValue","setTitleValue","newTodos","setNewTodos","userIdSelected","setUserIdSelected","userIsSelected","setUserIsSelected","titleIsAdd","setTitleIsAdd","todo","find","userItem","useEffect","FormControl","sx","maxWidth","margin","Grid","container","direction","justifyContent","alignItems","spacing","item","xs","Select","value","width","onChange","event","target","MenuItem","user","TextField","type","variant","label","Button","onClick","preventDefault","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db5087c6.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport '../style/ToDoListStyles.scss';\n\ntype Props = {\n  name: string;\n  username: string;\n  email: string;\n};\n\nconst UserInfo: React.FC<Props>\n  = ({\n    name,\n    username,\n    email,\n  }) => {\n    return (\n      <ul className=\"ul_reset\">\n        <li>\n          Name:\n          {name}\n        </li>\n        <li>\n          User Name:\n          {username}\n        </li>\n        <li>\n          Email:\n          {email}\n        </li>\n      </ul>\n    );\n  };\n\nexport default UserInfo;\n","import React from 'react';\nimport '../style/ToDoListStyles.scss';\n\ntype Props = {\n  userId:number;\n  title:string;\n  completed:boolean;\n};\n\nconst TodoInfo: React.FC<Props>\n  = ({\n    userId,\n    title,\n    completed,\n  }) => {\n    return (\n      <ul className=\"ul_reset\">\n        <li>\n          User Id :\n          {userId}\n        </li>\n        <li>\n          Title:\n          {title}\n        </li>\n        <li className={completed ? 'isCompleted' : 'notCompleted'}>\n          {completed ? 'Is Completed' : 'Not Completed'}\n        </li>\n      </ul>\n    );\n  };\n\nexport default TodoInfo;\n","import React from 'react';\nimport { Todo } from '../Types';\nimport UserInfo from '../UserInfo/UserInfo';\nimport TodoInfo from '../TodoInfo/TodoInfo';\nimport '../style/ToDoListStyles.scss';\n\ntype Props = {\n  preparedTodos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ preparedTodos }) => {\n  return (\n    <div className=\"todo-list\">\n      {\n        preparedTodos.map(todoItem => {\n          if (todoItem.userInfo) {\n            const { name, email, username } = todoItem.userInfo;\n            const { userId, title, completed } = todoItem;\n\n            return (\n              <div className=\"todo-list__items\" key={todoItem.id}>\n                <UserInfo\n                  name={name}\n                  email={email}\n                  username={username}\n                />\n                <TodoInfo\n                  userId={userId}\n                  title={title}\n                  completed={completed}\n                />\n              </div>\n            );\n          }\n\n          return null;\n        })\n      }\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  Grid,\n  Button,\n  Select,\n  MenuItem,\n  TextField,\n  FormControl,\n} from '@mui/material';\nimport users from './api/users';\nimport todos from './api/todos';\nimport { TodoList } from './TodoList/TodoList';\nimport { Todo } from './Types';\n\nconst App: React.FC = () => {\n  const [titleValue, setTitleValue] = useState('');\n  const [newTodos, setNewTodos] = useState(todos);\n  const [userIdSelected, setUserIdSelected] = useState(0);\n  const [userIsSelected, setUserIsSelected] = useState<boolean>();\n  const [titleIsAdd, setTitleIsAdd] = useState<boolean>();\n\n  const preparedTodos:Todo[] = newTodos.map(todo => ({\n    ...todo,\n    userInfo: users.find(userItem => userItem.id === todo.userId) || null,\n  }));\n\n  const addToDo = () => {\n    // eslint-disable-next-line\n    userIdSelected\n      ? setUserIsSelected(true)\n      : setUserIsSelected(false);\n    // eslint-disable-next-line\n    titleValue\n      ? setTitleIsAdd(true)\n      : setTitleIsAdd(false);\n\n    if (!titleValue) {\n      return;\n    }\n\n    setNewTodos(() => [...newTodos, {\n      userId: userIdSelected,\n      id: newTodos.length + 1,\n      title: titleValue,\n      completed: false,\n    }]);\n\n    setUserIdSelected(0);\n    setTitleValue('');\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    userIdSelected && setUserIsSelected(true);\n    // eslint-disable-next-line\n    titleValue && setTitleIsAdd(true);\n  }, [userIdSelected, titleValue]);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <div>\n        <FormControl sx={{\n          maxWidth: '500px',\n          margin: 'auto',\n        }}\n        >\n\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            spacing={3}\n          >\n            <Grid item xs>\n              <Select\n                value={userIdSelected}\n                sx={{\n                  width: '150px',\n                }}\n                onChange={(event) => {\n                  setUserIdSelected(+event.target.value);\n                }}\n              >\n\n                <MenuItem value={0}>Choose a user</MenuItem>\n                {users.map(user => {\n                  const { id } = user;\n\n                  return (\n                    <MenuItem\n                      value={id}\n                      key={id}\n                    >\n                      {id}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n              {userIsSelected === false\n                ? <p className=\"alert\">Please choose a user</p>\n                : null}\n\n            </Grid>\n\n            <Grid item xs={6}>\n              <TextField\n                type=\"text\"\n                variant=\"outlined\"\n                label=\"Enter your name\"\n                value={titleValue}\n                onChange={(event) => {\n                  setTitleValue(event.target.value);\n                }}\n              />\n\n              {titleIsAdd === false\n                ? <p className=\"alert\">Please enter the title</p>\n                : null}\n            </Grid>\n\n            <Grid item xs>\n              <Button\n                variant=\"outlined\"\n                onClick={(event) => {\n                  event.preventDefault();\n                  addToDo();\n                }}\n              >\n                Add\n              </Button>\n            </Grid>\n          </Grid>\n\n        </FormControl>\n\n        <TodoList preparedTodos={preparedTodos} />\n\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}